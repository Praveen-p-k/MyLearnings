{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const userSlice = createSlice({\n  name: 'todo',\n  initialState: {\n    list: []\n  },\n  reducers: {\n    addValue: (state, action) => {\n      const obj = {\n        id: Math.random(),\n        todoValue: action.payload.todoValue,\n        completed: false,\n        edit: false\n      };\n      state.list.push(obj);\n    },\n    completed: (state, action) => {\n      state.list.map(data => {\n        if (action.payload.doneValue === data.id) {\n          data.completed = !data.completed;\n          return data;\n        }\n        return data;\n      });\n    },\n    deleteValue: (state, action) => {\n      state.list = state.list.filter(data => {\n        if (data.id === action.payload.deleteValue) {\n          return false;\n        }\n        return true;\n      });\n    },\n    editValue: (state, action) => {\n      state.list.map(data => {\n        if (action.payload.editValue === data.id) {\n          data.edit = !data.edit;\n          return data;\n        }\n        return data;\n      });\n    },\n    saveChanges: (state, action) => {\n      state.list.map(data => {\n        if (action.payload.id === data.id) {\n          data.edit = !data.edit;\n          data.todoValue = action.payload.editValue;\n          return data;\n        }\n        return data;\n      });\n    }\n  }\n});\nexport const {\n  addValue,\n  completed,\n  deleteValue,\n  editValue,\n  saveChanges\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","userSlice","name","initialState","list","reducers","addValue","state","action","obj","id","Math","random","todoValue","payload","completed","edit","push","map","data","doneValue","deleteValue","filter","editValue","saveChanges","actions","reducer"],"sources":["/home/calibraint/Documents/MyLearnings/MyProjects/TodoList(reduxToolKit)/src/Store/Store.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const userSlice = createSlice({\n    name: 'todo',\n    initialState: {\n        list: [],\n    },\n    \n    reducers: {\n        addValue: (state, action) => {\n            const obj = {\n                id: Math.random(),\n                todoValue: action.payload.todoValue,\n                completed: false,\n                edit: false\n            }\n            state.list.push(obj);\n        },\n        completed: (state, action) => {\n            state.list.map((data) => {\n                if (action.payload.doneValue === data.id) {\n                    data.completed = !data.completed;\n                    return data;\n                }\n                return data;\n            })\n        },\n        deleteValue: (state, action) => {\n            state.list = state.list.filter((data) => {\n                if (data.id === action.payload.deleteValue) {\n                    return false;\n                }\n                return true;\n            })\n        },\n        editValue: (state, action) => {\n            state.list.map((data) => {\n                if (action.payload.editValue === data.id) {\n                    data.edit = !data.edit;\n                    return data;\n                }\n                return data;\n            })\n        },\n        saveChanges: (state, action) => {\n            state.list.map((data) => {\n                if (action.payload.id === data.id) {\n                    data.edit = !data.edit;\n                    data.todoValue = action.payload.editValue;\n                    return data;\n                }\n                return data;\n            })\n        }\n    }\n})\nexport const { addValue, completed, deleteValue, editValue, saveChanges } = userSlice.actions;\nexport default userSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,MAAMC,SAAS,GAAGD,WAAW,CAAC;EACjCE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACVC,IAAI,EAAE;EACV,CAAC;EAEDC,QAAQ,EAAE;IACNC,QAAQ,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACzB,MAAMC,GAAG,GAAG;QACRC,EAAE,EAAEC,IAAI,CAACC,MAAM,EAAE;QACjBC,SAAS,EAAEL,MAAM,CAACM,OAAO,CAACD,SAAS;QACnCE,SAAS,EAAE,KAAK;QAChBC,IAAI,EAAE;MACV,CAAC;MACDT,KAAK,CAACH,IAAI,CAACa,IAAI,CAACR,GAAG,CAAC;IACxB,CAAC;IACDM,SAAS,EAAEA,CAACR,KAAK,EAAEC,MAAM,KAAK;MAC1BD,KAAK,CAACH,IAAI,CAACc,GAAG,CAAEC,IAAI,IAAK;QACrB,IAAIX,MAAM,CAACM,OAAO,CAACM,SAAS,KAAKD,IAAI,CAACT,EAAE,EAAE;UACtCS,IAAI,CAACJ,SAAS,GAAG,CAACI,IAAI,CAACJ,SAAS;UAChC,OAAOI,IAAI;QACf;QACA,OAAOA,IAAI;MACf,CAAC,CAAC;IACN,CAAC;IACDE,WAAW,EAAEA,CAACd,KAAK,EAAEC,MAAM,KAAK;MAC5BD,KAAK,CAACH,IAAI,GAAGG,KAAK,CAACH,IAAI,CAACkB,MAAM,CAAEH,IAAI,IAAK;QACrC,IAAIA,IAAI,CAACT,EAAE,KAAKF,MAAM,CAACM,OAAO,CAACO,WAAW,EAAE;UACxC,OAAO,KAAK;QAChB;QACA,OAAO,IAAI;MACf,CAAC,CAAC;IACN,CAAC;IACDE,SAAS,EAAEA,CAAChB,KAAK,EAAEC,MAAM,KAAK;MAC1BD,KAAK,CAACH,IAAI,CAACc,GAAG,CAAEC,IAAI,IAAK;QACrB,IAAIX,MAAM,CAACM,OAAO,CAACS,SAAS,KAAKJ,IAAI,CAACT,EAAE,EAAE;UACtCS,IAAI,CAACH,IAAI,GAAG,CAACG,IAAI,CAACH,IAAI;UACtB,OAAOG,IAAI;QACf;QACA,OAAOA,IAAI;MACf,CAAC,CAAC;IACN,CAAC;IACDK,WAAW,EAAEA,CAACjB,KAAK,EAAEC,MAAM,KAAK;MAC5BD,KAAK,CAACH,IAAI,CAACc,GAAG,CAAEC,IAAI,IAAK;QACrB,IAAIX,MAAM,CAACM,OAAO,CAACJ,EAAE,KAAKS,IAAI,CAACT,EAAE,EAAE;UAC/BS,IAAI,CAACH,IAAI,GAAG,CAACG,IAAI,CAACH,IAAI;UACtBG,IAAI,CAACN,SAAS,GAAGL,MAAM,CAACM,OAAO,CAACS,SAAS;UACzC,OAAOJ,IAAI;QACf;QACA,OAAOA,IAAI;MACf,CAAC,CAAC;IACN;EACJ;AACJ,CAAC,CAAC;AACF,OAAO,MAAM;EAAEb,QAAQ;EAAES,SAAS;EAAEM,WAAW;EAAEE,SAAS;EAAEC;AAAY,CAAC,GAAGvB,SAAS,CAACwB,OAAO;AAC7F,eAAexB,SAAS,CAACyB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}